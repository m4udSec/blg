# Intro

This blog post aims to help any student going through the new OSCP exam to prepare, or to be at least better armed for what is to come. 

I have had the opportunity to test the majority of the machines, so this could be insightful to anyone going for the new OSCP exam in the near future.

AD - The active directory will consist of 3 machines, a DC linked to 2 other client machines. Note that there are no partial points allocated for partial AD exploitation, either you exploit the entire AD set including its DC or you get 0 points in the event you are not able to exploit one of its machines.

OSCP exam will count with 3 other standalone challenge machines.

Provided you have put enough effort into the Course materials and Lab practice, your dedication will be a decisive element that will have drafted a solid foundation for success in the OSCP exam. 

---

# Initial Assessment and Planning

Preparation for a hands-on certification such as the OSCP exam has many elements in it, the most important ones are establishing a solid methodology, the proper management of the external and internal factors, and avoiding rabbit holes, among many others.

From our experience, we can confirm that students who do well in this exam are the ones who usually approach it with a plan of attack while taking comprehensive notes along the way. They are able to conduct independent research by analyzing and synthesizing the incoming flux of information under time pressure whilst also being organized. 

Strategy, from Greek *stratēgia -* Strategy is important because the resources available to achieve goals are usually limited. Strategy generally involves setting goals and priorities, determining actions to achieve the goals, and mobilizing resources to execute the actions. A strategy describes how the ends (goals) will be achieved by the means (resources).

Main Elements of the preparations that we’ll cover in this post:

1) Methodology 
2) Practice in PWK labs and beyond
3) Internal management - Time and self
4) External Management - Avoiding distractions
5) Understanding OSCP Scope

So what are the main points that a methodology should cover? Let’s discuss the most important ones while also emphasizing the possible pitfalls of each of them. 

---

## 1 Methodology

This blog post will be mostly methodology-driven, as, in our opinion, methodology is the key to both the old and newer OSCP exams.

So prior to reading this post it is highly recommended to get a feeling of the proposed methodology we are going to talk about, **LINK FOR BETA/ALPHA WALKTHROUGH**.

With a solid methodology, you might be able to make mistakes, because such is a part of human nature, but you may soon find out that a strong and consolidated methodology will bring you right back on track if you happen to deviate from it.

Establishing your Methodology should be the main aim as you go through the PWK course and beyond. If you are preparing comprehensive documentation by taking extensive notes and keeping your favorite tools close, you’ll allow yourself to potentially put those techniques and scripts to good use once again in the future (and during the exam, who knows). 

How do we go about crafting our own methodology? We prepare it while we’re busy studying and practicing hacking. 

## 2 Preparation - from Theory to Practice

### PWK Course

[https://www.offensive-security.com/documentation/penetration-testing-with-kali.pdf](https://www.offensive-security.com/documentation/penetration-testing-with-kali.pdf) 

PEN-200 is a hands-on penetration testing course, meaning that the techniques learned should be applied during practice. Everything you learn while doing the exercises you can apply afterward by hacking vulnerable machines. 

The most proven way to do that is to finish all the Modules in the course and complete the exercises to consolidate that knowledge, then spend a considerable amount of time honing the skills acquired in the PWK lab environment. The more time you spend practicing, the better your pattern recognition becomes, increasing your chances of improving your overall speed and decreasing time spent in rabbit holes.

### PWK Labs

[https://help.offensive-security.com/hc/en-us/articles/360046293192-PEN-200-Network-Introduction-Guide](https://help.offensive-security.com/hc/en-us/articles/360046293192-PEN-200-Network-Introduction-Guide) 

[https://help.offensive-security.com/hc/en-us/articles/360050473812-PEN-200-Labs-Learning-Path](https://help.offensive-security.com/hc/en-us/articles/360050473812-PEN-200-Labs-Learning-Path) 

Enumeration is the process of looking for the initial vulnerabilities on a target. It is also applicable to finding vulnerabilities when escalating privileges once on target. During PWK labs, it is where you’ll be spending most of the time. Once a vulnerability has been confirmed, the exploitation process itself is straightforward and shouldn’t take much time. 

It’s okay to feel lost while enumerating at times, but you should strive for a healthy balance between using hints on community channels such as Discord and putting in more effort on your own. If you’ve been working on the machine for an hour or two without gaining initial access to it, you should keep enumerating and testing yourself, don’t deprive yourself of learning opportunities. But if it’s been a long time going (for a day, for example) already, then it’s okay to look for hints or assistance.

OSCP will test your self-reliance, so all the independent work you have been doing up until that point will be showing off: enumeration skills, notes, research, etc. That’s one more reason to take extensive notes on the machines compromised and exercises completed. 

Then once the work is done you can compile those notes into the cheat sheets that can be used afterward. 

However, you should continue reviewing and validating the gathered information in the notes and cheat sheets. It will help separate wheat from the chaff and keep track of what is important.

TO-DO (need confirmation on this first):

- All the info that we’re **allowed** to give regarding the machines for the prep such as a List of PWK/PG machines to practice
- Recommendations like going for IT network in PWK to complete 5 retired exam machines (but I wouldn’t recommend those Client-Side and outdated machines like Nina, Nicky, etc). Other departments: Admin network for more retired exam machines (Ekzameno), maybe Dev
- + AD preparation

### Lab Report & Exercises

One of the possible scenarios of gaining a passing score is to submit a lab report that is now worth 10 points. The value of the lab report has increased and now it can become a decisive factor between a pass and a fail. 

We recommend keeping the Lab report compact - within 100 pages. A screenshot of the completed exercise is all that is needed to be included. Time spent writing reports that are over 200 pages long should be spent practicing and taking care of other aspects of preparation. 

That’s all about the technical part of the preparation, and to wrap it up, here’s a Checklist of minimal technical prerequisites before embarking on the exam:

- [ ]  Do I understand the networking fundamentals well?
- [ ]  Can I understand what the basic exploits do when reading the code and modify them to suit my needs?
- [ ]  Am I comfortable navigating through a large amount of information?

## 3 Management - Internal

Time management, time is a silent killer - the mere fact that the OSCP exam is time-constrained,  should be one of the most if not the most important thing to be aware of, and it should impact and help you shape your attack approach.

To deal with this aspect of the exam, I highly recommend the use of timers, especially in the event of the student being anyhow like me, I do often lose track of time while I am working on a possible vulnerability or a potential attack vector. Out of the blue, the hours have passed me by silently, robbing me of the chances to explore other machines or even search for different vectors.

When it comes to using a time-based approach, how long should we give ourselves for an individual task? 

As the sheer amount of challenges can be quite daunting I would recommend you go for small-time let's say 15 minutes, and give up/abusing for the rotation of challenges.

If you happen to have relevant data that fully supports and justifies the possible investment of extra time in regards to a potential vulnerability, then, by all means, you should stick to your guts and maybe bump the amount of time to 30 minutes perhaps.

But, give it too much time for every task, and not much will be done, give yourself small time quantities while giving precedent to the rotation based approach, and soon enough you might have uncovered a much larger attack surface, which should be somewhat directly proportional to the amounts of vulnerabilities you may discover in other challenges.

So while the PWK journey can be considered a marathon, as most students take months to complete the course content, however, the OSCP exam itself is not due to time constraints imposed by the intimidating 24 hours limit. 

The exam is 23:45 hours precisely, but it doesn’t mean you should be staying up the whole night and day with it. Instead, you should plan to be able to complete it within a working day shift - 9-12 hours, and take care of yourself afterward and in between.  You should be the one to know when you are obliged to press on your efforts to achieve the task at hand, and when to step back to take care of your well-being.

- First things first. If we have a good attack plan prepared we know the essential tasks we have to get done foremost.
- Act according to your priorities. Keep the focus on the objective and on the present, knowing that good work now leads to good outcomes later on.
- Don’t try to multitask too much. You can leave the tools running for multiple hosts, but human minds don’t work well while multithreading, we’re more wired to do one thing, and then switch tasks. Remember that every time you multitask, you’re merely switching tasks rapidly instead. And every time you do that, you’re wasting your body’s resources to be able to refocus, so the more you do it the more time and energy you waste.
- Take breaks and take care of yourself to help your brain work better. It’s a proven fact that our brain is hard at work while we’re taking breaks, especially if we rest by switching activities (such as walking, running, even the change of scenery can be a trigger for that). It’s all too easy to get caught up in the process, so remember that being tied to a desk for hours straight is counterproductive to our objective. You can’t do your best if you aren’t at your best.

## 4 Management - External

We understand that the exam and report writing the next day is a lengthy process and life takes precedence. However, being in an environment full of distractions can negatively impact concentration and will introduce unnecessary additional stress. While the self-preparation we made in the previous chapters can go a long way in helping to reduce anxiety and keeping a clear head, do not underestimate the influence of external stimuli on our capabilities. No matter how good the plan we make beforehand, we are not in control of, or responsible for, everything that happens around us. What we are in control of is how we respond to the impact of these circumstances.

While you should strive to adapt to a new environment such as the OSCP exam, some factors will remain unchanged, so keep in mind:

- Schedule the exam to start during the time you work better: be at the first thing in the morning if you’re an early riser, or well past the afternoon if you’re accustomed to working at night. This way you’ll increase the chances of completing the exam within your normal day span, leaving you with more time to recover your strength and prepare the report documentation.
- Take screenshots of the exploitation process as you go along with the exam - protect yourself from the situations when you have to redo all the steps to adhere to the strict documentation requirements. The same goes for the general notes, commands used, outputs, etc.
- Have a backup plan in case of a situation out of your control occurring (electricity, internet, etc.)

It’s also important to touch on the subject of dealing with the distractions in the exam itself, or how do we avoid the rabbit holes? Remember that a rabbit hole is a red herring that will look like a possible vulnerability, but it’s actually there to distract you from the real vulnerability.  The exam environment is not supposed to be straightforward, the distractions evasion is the proof of the skill of the situational awareness of the exam taker. 

But the good news is that the amount of time you previously put into independent research and practice is inversely proportional to the amount of time you’ll spend in the rabbit holes during your test. The experience you have accumulated will serve as a hacker’s intuition for such situations. 

The general formula of rabbit holes evasion is the combination of accumulated experience + understanding of the current Scope. Even if you find yourself in a rabbit hole, with this defense you’ll be able to pull yourself back onto the surface.

## 5 OSCP Scope - Established

Situation awareness is vital, contextualizing your situation/challenge can be very helpful in regards to avoiding rabbit holes or even losing too much time in them. 

Do not lose track of the fact that OSCP is an entry-level certification, the most challenging one in fact, but the fact remains and it is still an entry-level cert. What that means is, don't waste your time on things that should be out of scope, like **“second-order SQLi” or “Blind SQLi” or “Browser exploitation”** or trying to overly modify an exploit or a machine environment to make it vulnerable to something. ****In sum, if you’re unsure, do not over-complicate it, if you are spending too much time on a possible vulnerability but wasn’t able to confirm it, rotate for the sake of strategy.

While for the PWK labs we encourage our students to explore every exploitation method emphasizing that there is no “intended way” in hacking, it’s important to stay within scope for OSCP due to the time constraints imposed by the exam.

# Going on Offensive

## From Strategy to Tactics

> **“Strategy without tactics is the slowest route to victory. Tactics without strategy is the noise before defeat.” - Sun Tzu**
> 

[https://help.offensive-security.com/hc/en-us/articles/4412170923924-OSCP-Exam-Update-01-11-22-FAQ](https://help.offensive-security.com/hc/en-us/articles/4412170923924-OSCP-Exam-Update-01-11-22-FAQ) 

From wiki: these are the possible scenarios of gaining a passing score on the updated exam:

- 40 pt AD + 3 local.txt flags
- 40 pt AD + 2 local.txt flags + 1 proof.txt flag
- 40 pt AD + 2 local.txt flags + bonus points
- 40 pt AD + 1 proof.txt + 1 local.txt + bonus points
- 3 fully completed non-AD machines + bonus points

Based on the very dictionary definition of the word strategy we can start to draw an attack plan against our formidable foe - the OSCP exam. With the new Active Directory set being an “All or nothing” in regards to points, I would recommend going for the standalone challenges as my first move, unless you feel extremely comfortable with the AD content of the PEN-200 course. Moreover, I would recommend leaving it to last, even in the event that you get a BoF, the BoF would take precedence over the AD as well.

Now onto the bread and butter.

## Initiating the Challenge - Information Gathering

### Port scanning

I recommend sticking with the basics here, a good Nmap service scan will suffice for any of the possible challenges. Yes, you may also run some convoluted scripts which will create tenths of output files for you to inspect for each machine, but it can also be overkill and lead you to rabbit holes more often than it should. While it certainly will depend on how you are wired, in my humble experience, I find that an overload of outputs can get very tiresome and time-consuming to deal with, which can render proper time management. Moreover, it could lead to a sea of false positives to deal with.

If you feel that Nmap is too slow for you, by all means, get futuristic and give it a try to Rustscan, which is an implementation of Nmap in **rusty**, incredible fast, and it has most of the features we are used to.

But be aware, if you causing an unspeakable amount of traffic, that could hurt your output as well, making it more prone to both false positives and false negatives.

Make your bread and butter your second nature, and it should passively minimize the number of problems you will find.

Now after the scan is done, where should we go first? If you see the file-sharing ports open such as SMB, FTP, NFS, check the available shares ****you can access.

If there is nothing interesting to be found there, proceed to enumerate the web surface.

### WEB

Web surface, here I would recommend using Nikto and your favorite directory discovery tool. There is a good variety of flavors in the market to choose from, and they are mostly as good as the wordlists you are using.

You should conduct your enumeration in every place accessible to you by applying techniques covered in the PEN-200 course (such as SQLi, File Inclusion vulnerabilities, command injection, and more). 

- Places to pay attention to are also well covered in the course

## Finding and Using Exploits

### Versions, Versions, and more Versions

- Try and enumerate every possible version of every possible service you find, this should expand your attack surface.
- The machines are made to be vulnerable by design. However, it’s all too easy to overcomplicate it, so once again stick to the scope.

### Find the perfect match (exploit)!

Here you have fewer friends, but friends indeed nonetheless: 

- **Searchsploit** should be a very useful ally here, get better acquainted with it, learn how to properly use it, its flags, and combination with **grep**, and it shall grant you an upper hand while searching for the perfect exploit match.
- Followed by Google and GitHub, and moreover, it won't kill to have a secondary search engine like DuckDuckGo. This has proven to be quite effective in the event Google does not return the expected results in any way.

### Exploit modification

Context, Context, and more Context here! Study what exactly the exploits are doing before using them, but don’t go overboard with unnecessary modifications. 

Here I urge the reader that will be going through their OSCP exam, to kindly remember the fact that this is an entry-level certification. In the event in which you find yourself making very elaborated modifications on the exploit that you have decided to work with, the odds are that you might be working on the wrong exploit, or barking at the wrong tree. 

The ideal scenario would suggest small modifications, like LHOST or RHOST or PORTS or Payload (the right kind of reverse shell), maybe uncommenting a code section based on a particular architecture should suffice here.

It is also important to keep in mind that many exploits will grant you an RCE, and you should feel comfortable moving from this point to gaining a shell by having a list of available techniques ready at hand. 

## Privilege Escalation - Impersonating the king?

You have entered this kingdom through the back door, now your aim should be to dethrone the king and impersonate him as the new ruler of the land.

A bit of automation and enumeration scripts could be quite helpful, but so is having a solid checklist for privilege escalation, or you might get lost quite easily and return to the point in which you have been already, then trying over and over again the same things, without success.

My main recommendation here should be the usage of a solid checklist, that shall go through the bread and butter of the privilege escalation, things like checking the history files, checking for cron jobs, permissions in this land, services available or hidden in the loopback interface and so on.

## Post exploitation - I have the keys to the kingdom and now what

Now that you have dethroned the king and have successfully impersonated him, comes a few very important task every king of its land should attend to, for starters, do not forget to read the contents of both local.txt/proof.txt and provide a screenshot together with the output of the command ifconfig/ipconfig.

But oftentimes a machine would not have those commands available, what to do now? A well-rounded pentester looks for solutions and not problems, such as:

- Have you checked the system binaries in /sbin folder or similar?
- Have you tried uploading your own binary?
- Have you checked what is in your PATH, maybe your path does not have the right folders?

More about AD Post-Exploitation 

# OSCP Exam Report

“Exam reports should contain both full enumeration and exploitation steps. You should assume that a technically competent reader will execute every step mentioned in the report in order to validate its accuracy.”

The link to the updated OSCP exam and lab report that I’m working on -
